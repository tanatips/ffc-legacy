buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.28.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    maven{
        url  'https://oss.sonatype.org/content/repositories/snapshots/'
        name 'OSS-Sonatype'
    }
}

android {
//    compileSdkVersion 33
//    buildToolsVersion "25.0.0"
    namespace "th.in.ffc"
    compileSdk 33
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "th.in.ffc"
        namespace "th.in.ffc"
        minSdk 23
        targetSdk 33
        versionCode 30001
        versionName "3.0.1"
    }

    signingConfigs {

        debug {
            storeFile file("debug.keystore")
        }

        release {
            Properties properties
            if (file('local.properties').exists()) {
                properties = new Properties()
                properties.load(rootProject.file('local.properties').newDataInputStream())
            }

            storeFile file("release.keystore")
            keyAlias 'wis@nectec'
            keyPassword properties?.getProperty("release.keypassword") ?:
                    System.getenv('RELEASE_KEY_PASSWORD')
            storePassword properties?.getProperty("release.keypassword") ?:
                    System.getenv('RELEASE_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix " debug"
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            manifestPlaceholders = [google_map_key: 'AIzaSyDFnqKppKcMpTfZZhSXP1rIn2rrtd89hr8']
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [google_map_key: 'AIzaSyDFnqKppKcMpTfZZhSXP1rIn2rrtd89hr8']
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude "LICENSE.txt"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/ASL2.0"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "com.google.android.gms:play-services-maps:18.0.2"
    implementation 'com.google.android.gms:play-services-analytics:18.0.1'


    implementation 'com.github.piruin:quickaction:2.4.3'
    implementation 'org.osmdroid:osmdroid-android:6.1.10'
    implementation 'com.google.android.libraries.places:places:2.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') { transitive = true; }
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'com.google.android.material:material:1.0.0'

}

apply plugin: 'com.google.gms.google-services'
